# teams_parser.py

import sqlite3
import os
import yaml
import time
from urllib.parse import urljoin

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException, StaleElementReferenceException

def insert_team(cursor, name, url, tag_url, tournament_id, alias=None, external_id=None):
    """
    –í—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –≤ –ë–î –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é.
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –ø–æ URL
        cursor.execute("SELECT id, name FROM teams WHERE url = ?", (url,))
        existing_data = cursor.fetchone()

        if existing_data:
            existing_id = existing_data['id']
            existing_name = existing_data['name']
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π tag_url –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            cursor.execute("SELECT tag_url FROM teams WHERE id = ?", (existing_id,))
            current_tag_url = cursor.fetchone()['tag_url']
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ tag_url –∏–∑–º–µ–Ω–∏–ª—Å—è –∏–ª–∏ –±—ã–ª –ø—É—Å—Ç—ã–º, –∞ —Ç–µ–ø–µ—Ä—å –Ω–∞–π–¥–µ–Ω
            if current_tag_url != tag_url:
                cursor.execute("UPDATE teams SET name = ?, tag_url = ? WHERE id = ?",
                               (name, tag_url, existing_id))
                print(f"    üîÑ –û–±–Ω–æ–≤–ª–µ–Ω tag_url –¥–ª—è –∫–æ–º–∞–Ω–¥—ã '{existing_name}' (ID: {existing_id}).")
            else:
                print(f"    ‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥–∞ '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_id}). –î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.")
            return existing_id
        else:
            # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            cursor.execute("INSERT INTO teams (name, url, tag_url, tournament_id, alias, external_id) VALUES (?, ?, ?, ?, ?, ?)",
                           (name, url, tag_url, tournament_id, alias, external_id))
            print(f"    ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '{name}' (ID: {cursor.lastrowid}) –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ ID: {tournament_id}.")
            return cursor.lastrowid
    except sqlite3.IntegrityError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ë–î –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã '{name}': {e}.")
        return None
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã '{name}': {e}")
        return None

def check_and_update_db_schema(cursor):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ 'tournaments' —Å—Ç–æ–ª–±–µ—Ü 'type', –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ, –µ—Å–ª–∏ –Ω–µ—Ç.
    """
    try:
        cursor.execute("PRAGMA table_info(tournaments)")
        columns = [info['name'] for info in cursor.fetchall()]
        if 'type' not in columns:
            print("‚ö†Ô∏è –°—Ç–æ–ª–±–µ—Ü 'type' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ 'tournaments'. –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ...")
            cursor.execute("ALTER TABLE tournaments ADD COLUMN type TEXT")
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'type' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'type' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ 'tournaments'.")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã –ë–î: {e}")
        raise

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–º–∞–Ω–¥ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü –≤—Å–µ—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤.
    """
    # --- –ù–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
    config_path = os.path.join(os.path.dirname(os.getcwd()), 'sport-news-bot','parsers', 'sources','championat', 'config', 'sources_config.yml')
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = os.path.join(os.path.dirname(os.getcwd()), 'sport-news-bot', 'database', 'prosport.db')

    if not os.path.exists(config_path):
        print(f"–û—à–∏–±–∫–∞: sources_config.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ {config_path}")
        return
    try:
        with open(config_path, encoding="utf-8") as f:
            all_config = yaml.safe_load(f)
        championat_config = all_config["championat"]
        print("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è championat.com –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return

    parser_config = championat_config['selectors']
    team_item_selector = parser_config.get('team_item_selector')
    team_name_selector = parser_config.get('team_name_selector')
    team_link_selector = parser_config.get('team_link_selector')
    team_tag_link_selector_team_page = parser_config.get('team_tag_link_selector_team_page')
    no_teams_message_selector = parser_config.get('no_teams_message_selector')
    tournament_results_table_selector = parser_config.get('tournament_results_table_selector')
    tournament_table_team_link_selector = parser_config.get('tournament_table_team_link_selector')

    if not all([team_item_selector, team_name_selector, team_link_selector, team_tag_link_selector_team_page, tournament_results_table_selector, tournament_table_team_link_selector]):
        print("‚ùå –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ 'sources_config.yml'.")
        return

    # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Selenium WebDriver ---
    driver = None
    conn = None
    try:
        chrome_options = webdriver.ChromeOptions()
        chrome_options.add_argument("--headless")
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        chrome_options.add_argument(f"user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36")
        chrome_options.add_argument("--ignore-certificate-errors")
        chrome_options.add_argument("--allow-insecure-localhost")
        chrome_options.add_argument("--disable-blink-features=AutomationControlled")
        chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])
        chrome_options.add_experimental_option('useAutomationExtension', False)

        driver = webdriver.Chrome(options=chrome_options)
        wait = WebDriverWait(driver, 10)

        # --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã ---
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        check_and_update_db_schema(cursor)
        conn.commit()

        print("\n--- –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—Å–µ—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤ ---")

        cursor.execute("SELECT id, name, tournaments_url, type FROM tournaments")
        db_tournaments_data = cursor.fetchall()

        if not db_tournaments_data:
            print("–í —Ç–∞–±–ª–∏—Ü–µ 'tournaments' –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
            return
        else:
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(db_tournaments_data)} —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")

        for tournament_row in db_tournaments_data:
            tournament_id = tournament_row['id']
            tournament_name = tournament_row['name']
            tournament_base_url = tournament_row['tournaments_url']
            
            if not tournament_base_url:
                print(f"  ‚ö†Ô∏è URL —Ç—É—Ä–Ω–∏—Ä–∞ '{tournament_name}' (ID: {tournament_id}) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                continue

            teams_page_url = f"{tournament_base_url}teams/"
            
            # –°–ø–∏—Å–æ–∫ –¥–ª—è —Å–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥
            teams_to_process = []
            
            print(f"\n--- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞: '{tournament_name}' (ID: {tournament_id}) ---")
            
            # --- –≠—Ç–∞–ø 1: –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã '/teams/' ---
            try:
                print(f"  –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–∞–Ω–¥: {teams_page_url}")
                driver.get(teams_page_url)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥ –Ω–µ—Ç
                try:
                    no_teams_message = driver.find_element(By.CSS_SELECTOR, no_teams_message_selector)
                    if "–ö–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" in no_teams_message.text:
                        raise NoSuchElementException("–°–æ–æ–±—â–µ–Ω–∏–µ '–ö–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.")
                except NoSuchElementException:
                    pass

                wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, team_item_selector)))
                team_elements = driver.find_elements(By.CSS_SELECTOR, team_item_selector)
                
                if team_elements:
                    print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(team_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /teams/. –¢—É—Ä–Ω–∏—Ä –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –∫–æ–º–∞–Ω–¥–Ω—ã–π.")
                    cursor.execute("UPDATE tournaments SET type = 'teams' WHERE id = ?", (tournament_id,))
                    conn.commit()
                    
                    for el in team_elements:
                        try:
                            team_name = el.find_element(By.CSS_SELECTOR, team_name_selector).text.strip()
                            team_results_url = urljoin(driver.current_url, el.find_element(By.CSS_SELECTOR, team_link_selector).get_attribute("href"))
                            teams_to_process.append({'name': team_name, 'url': team_results_url})
                        except (NoSuchElementException, StaleElementReferenceException):
                            print("  ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ.")
                    
            except (TimeoutException, NoSuchElementException):
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /teams/. –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±...")
                
                # --- –≠—Ç–∞–ø 2: –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç—É—Ä–Ω–∏—Ä–∞ ---
                try:
                    print(f"  –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç—É—Ä–Ω–∏—Ä–∞: {tournament_base_url}")
                    driver.get(tournament_base_url)
                    
                    wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, tournament_results_table_selector)))
                    team_elements = driver.find_elements(By.CSS_SELECTOR, tournament_table_team_link_selector)
                    
                    if team_elements:
                        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(team_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥ –≤ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ. –¢—É—Ä–Ω–∏—Ä –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –∫–æ–º–∞–Ω–¥–Ω—ã–π.")
                        cursor.execute("UPDATE tournaments SET type = 'teams' WHERE id = ?", (tournament_id,))
                        conn.commit()
                        
                        for el in team_elements:
                            try:
                                team_name = el.find_element(By.CSS_SELECTOR, "span.table-item__name").text.strip()
                                team_results_url = urljoin(driver.current_url, el.get_attribute("href"))
                                teams_to_process.append({'name': team_name, 'url': team_results_url})
                            except (NoSuchElementException, StaleElementReferenceException):
                                print("  ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ —Ç–∞–±–ª–∏—Ü—ã.")
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–∞–∂–µ –≤ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ. –¢—É—Ä–Ω–∏—Ä –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π.")
                        cursor.execute("UPDATE tournaments SET type = 'individual' WHERE id = ?", (tournament_id,))
                        conn.commit()

                except (TimeoutException, NoSuchElementException):
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –¢—É—Ä–Ω–∏—Ä –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π.")
                    cursor.execute("UPDATE tournaments SET type = 'individual' WHERE id = ?", (tournament_id,))
                    conn.commit()
                except Exception as e:
                    print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç—É—Ä–Ω–∏—Ä–∞: {e}")
            
            except Exception as e:
                print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã /teams/: {e}")

            # --- –≠—Ç–∞–ø 3: –ü–∞—Ä—Å–∏–Ω–≥ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è tag_url ---
            if teams_to_process:
                for team in teams_to_process:
                    team_name = team['name']
                    team_results_url = team['url']
                    team_tag_url = ""
                    
                    print(f"    ‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–∞–Ω–¥—ã '{team_name}': {team_results_url}")
                    try:
                        driver.get(team_results_url)
                        wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, team_tag_link_selector_team_page)))
                        
                        tag_link_element = driver.find_element(By.CSS_SELECTOR, team_tag_link_selector_team_page)
                        raw_tag_href = tag_link_element.get_attribute("href")
                        if raw_tag_href:
                            team_tag_url = urljoin(driver.current_url, raw_tag_href)
                            print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω tag_url –¥–ª—è '{team_name}': {team_tag_url}")

                    except (TimeoutException, NoSuchElementException):
                        print(f"    ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ tag_url –¥–ª—è '{team_name}'. –í–æ–∑–º–æ–∂–Ω–æ, –µ–≥–æ –Ω–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
                    except Exception as e_url:
                        print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ tag_url: {e_url}")
                    finally:
                        insert_team(
                            cursor=cursor,
                            name=team_name,
                            url=team_results_url,
                            tag_url=team_tag_url,
                            tournament_id=tournament_id
                        )
                        conn.commit()
                        time.sleep(1)
            else:
                 print(f"  ‚ÑπÔ∏è –î–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ '{tournament_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")

            time.sleep(2)

    except Exception as main_e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ: {main_e}")
    finally:
        if conn:
            conn.close()
            print("\n‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")
        if driver:
            driver.quit()
            print("‚úÖ WebDriver –∑–∞–∫—Ä—ã—Ç.")

if __name__ == "__main__":
    main()
