# parsers/sources/championat/main_structural_data_loader.py

import asyncio
import aiohttp
import sqlite3
import os
import yaml

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from database.prosport_db import init_db

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
from parsers.sources.championat.parsers.sports_parser import parse_sports, insert_sport
from parsers.sources.championat.parsers.tournaments_parser import parse_tournaments_for_sport, insert_tournament
from parsers.sources.championat.parsers.teams_parser import parse_teams_for_tournament, insert_team
from parsers.sources.championat.parsers.athletes_parser import parse_athletes_for_team, insert_athlete

# === –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ===
def load_config():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–∞—Ä—Å–µ—Ä–∞ –∏–∑ sources_config.yml.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ main_structural_data_loader.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ parsers/sources/championat/
    config_path = os.path.join(
        os.path.dirname(__file__),
        'config', 'sources_config.yml'
    )

    if not os.path.exists(config_path):
        print(f"‚ùå –û—à–∏–±–∫–∞: sources_config.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ {config_path}")
        return None

    try:
        with open(config_path, encoding="utf-8") as f:
            all_config = yaml.safe_load(f)
        
        config = all_config.get("championat")
        if not config:
            print("‚ùå –û—à–∏–±–∫–∞: –°–µ–∫—Ü–∏—è 'championat' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ sources_config.yml")
            return None

        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è championat.com –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
        return config
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return None

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ===
async def load_championat_structure(db_path="database/prosport.db"):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—Å–ø–æ—Ä—Ç, —Ç—É—Ä–Ω–∏—Ä—ã, –∫–æ–º–∞–Ω–¥—ã, –∞—Ç–ª–µ—Ç—ã)
    —Å Championat.com –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Ö –≤ –ë–î.
    """
    print("\n--- –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Championat.com ---")
    
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
    init_db(db_path) 
    
    conn = sqlite3.connect(db_path)
    conn.row_factory = sqlite3.Row # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–ª–æ–Ω–∫–∞–º –ø–æ –∏–º–µ–Ω–∏
    cursor = conn.cursor()

    config = load_config()
    if not config:
        conn.close()
        return

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
    }

    async with aiohttp.ClientSession(headers=headers) as session:
        # 1. –ü–∞—Ä—Å–∏–Ω–≥ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞
        print("\n--- –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞ ---")
        sport_id_map = {} # slug -> id
        sport_url_to_id = {} # url -> id (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)

        sports_list = await parse_sports(session, config["url"], config["parser"])
        if sports_list:
            print(f"  –ù–∞–π–¥–µ–Ω–æ {len(sports_list)} –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏.")
            for sport in sports_list:
                sport_id = insert_sport(cursor, sport["name"], sport["slug"], sport["url"])
                if sport_id:
                    sport_id_map[sport["slug"]] = sport_id
                    sport_url_to_id[sport["url"]] = sport_id # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL -> ID
            conn.commit()
            print(f"  ‚úÖ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –í—Å–µ–≥–æ: {len(sport_id_map)}.")
        else:
            print("  ü§∑ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.")
            conn.close()
            return # –ï—Å–ª–∏ –Ω–µ—Ç –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞, –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å

        # 2. –ü–∞—Ä—Å–∏–Ω–≥ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–æ–≤
        print("\n--- –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Ç—É—Ä–Ω–∏—Ä–æ–≤ ---")
        tournament_id_map = {} # url -> id
        if sports_list: # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞
            # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞
            tournament_tasks = []
            for sport in sports_list:
                sport_id = sport_id_map.get(sport["slug"])
                if sport_id:
                    tournament_tasks.append(
                        parse_tournaments_for_sport(session, sport["url"], config["parser"])
                    )
                else:
                    print(f"  ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —Ç—É—Ä–Ω–∏—Ä –¥–ª—è —Å–ø–æ—Ä—Ç–∞ '{sport['name']}' (ID –Ω–µ –Ω–∞–π–¥–µ–Ω).")
            
            all_tournaments_lists = await asyncio.gather(*tournament_tasks)

            for i, tournaments_list in enumerate(all_tournaments_lists):
                sport = sports_list[i] # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ø–æ—Ä—Ç
                sport_id = sport_id_map.get(sport["slug"]) # –ü–æ–ª—É—á–∞–µ–º ID —Å–ø–æ—Ä—Ç–∞
                if tournaments_list:
                    print(f"    –ù–∞–π–¥–µ–Ω–æ {len(tournaments_list)} —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è —Å–ø–æ—Ä—Ç–∞ '{sport['name']}'.")
                    for tournament in tournaments_list:
                        tournament_id = insert_tournament(cursor, tournament["name"], tournament["url"], sport_id)
                        if tournament_id:
                            tournament_id_map[tournament["url"]] = tournament_id
                else:
                    print(f"    ü§∑ –¢—É—Ä–Ω–∏—Ä—ã –¥–ª—è –≤–∏–¥–∞ —Å–ø–æ—Ä—Ç–∞ '{sport['name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.")
            conn.commit()
            print(f"  ‚úÖ –¢—É—Ä–Ω–∏—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –í—Å–µ–≥–æ: {len(tournament_id_map)}.")
        else:
            print("  ü§∑ –ù–µ—Ç –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤.")
            conn.close()
            return

        # 3. –ü–∞—Ä—Å–∏–Ω–≥ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –∞—Ç–ª–µ—Ç–æ–≤ (–¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤)
        print("\n--- –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ –∏ –∞—Ç–ª–µ—Ç–æ–≤ ---")
        if tournament_id_map: # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç—É—Ä–Ω–∏—Ä—ã
            team_tasks = []
            for tournament_url, tournament_id in tournament_id_map.items():
                # –ü–æ–ª—É—á–∞–µ–º sport_id –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞
                cursor.execute("SELECT sport_id FROM tournaments WHERE id = ?", (tournament_id,))
                result = cursor.fetchone()
                sport_id_for_tournament = result['sport_id'] if result else None

                sport_slug = None
                if sport_id_for_tournament:
                    cursor.execute("SELECT slug FROM sports WHERE id = ?", (sport_id_for_tournament,))
                    sport_slug_result = cursor.fetchone()
                    if sport_slug_result:
                        sport_slug = sport_slug_result['slug']

                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥/–∞—Ç–ª–µ—Ç–æ–≤ –¥–ª—è –æ–±—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                if sport_slug in ["other", "lifestyle", "cybersport", "bets", "olympicwinter"]: # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –æ–±—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    print(f"    ‚ÑπÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥/–∞—Ç–ª–µ—Ç–æ–≤ –¥–ª—è –æ–±—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: '{sport_slug}' (–¢—É—Ä–Ω–∏—Ä: {tournament_url}).")
                    continue
                
                team_tasks.append(
                    parse_teams_for_tournament(session, tournament_url, config["parser"])
                )
            
            all_teams_lists = await asyncio.gather(*team_tasks)

            # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —Ç—É—Ä–Ω–∏—Ä–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ø–æ—Ä—è–¥–æ–∫ –≤ all_teams_lists —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—Ä—è–¥–∫—É –≤ team_tasks
            # –ù—É–∂–Ω–æ –±—ã—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º, –µ—Å–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –∑–∞–¥–∞—á–∏ –±—ã–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã (continue)
            # –õ—É—á—à–µ –ø–µ—Ä–µ—Å—Ç—Ä–æ–∏—Ç—å, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å tournament_id –≤ parse_teams_for_tournament
            # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∏ –ø—Ä–æ–ø—É—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
            
            # –í –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å tournament_id –≤ parse_teams_for_tournament
            # –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –µ–≥–æ –≤–º–µ—Å—Ç–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥.
            
            # –í—Ä–µ–º–µ–Ω–Ω–æ, –±—É–¥–µ–º –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –∏—Å—Ö–æ–¥–Ω—ã–º —Ç—É—Ä–Ω–∏—Ä–∞–º –∏ –ø–æ–ª—É—á–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã
            # –≠—Ç–æ –º–µ–Ω–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, –Ω–æ –ø—Ä–æ—â–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            
            # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç—É—Ä–Ω–∏—Ä–æ–≤, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–∞–ª—å–Ω–æ –±—ã–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã
            actual_tournament_urls = [url for url, tid in tournament_id_map.items()]
            
            team_idx = 0
            for tournament_url, tournament_id in tournament_id_map.items():
                cursor.execute("SELECT sport_id FROM tournaments WHERE id = ?", (tournament_id,))
                result = cursor.fetchone()
                sport_id_for_tournament = result['sport_id'] if result else None
                sport_slug = None
                if sport_id_for_tournament:
                    cursor.execute("SELECT slug FROM sports WHERE id = ?", (sport_id_for_tournament,))
                    sport_slug_result = cursor.fetchone()
                    if sport_slug_result:
                        sport_slug = sport_slug_result['slug']
                
                if sport_slug in ["other", "lifestyle", "cybersport", "bets", "olympicwinter"]:
                    continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –∫–∞–∫ –∏ —Ä–∞–Ω–µ–µ

                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞ –∏–∑ all_teams_lists
                # –≠—Ç–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ –ø–æ—Ä—è–¥–æ–∫ –≤ all_teams_lists —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏–∏
                # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å dictionary comprehension –¥–ª—è all_teams_lists
                teams_list = all_teams_lists[team_idx]
                team_idx += 1 # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥

                if teams_list:
                    print(f"    –ù–∞–π–¥–µ–Ω–æ {len(teams_list)} –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ '{tournament_url}'.")
                    athlete_tasks = []
                    for team in teams_list:
                        team_id = insert_team(cursor, team["name"], team.get("alias"), team.get("url"), team.get("external_id"), tournament_id, team.get("tag_url"))
                        if team_id:
                            # –ü–∞—Ä—Å–∏–º –∞—Ç–ª–µ—Ç–æ–≤, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –∫–æ–º–∞–Ω–¥—ã –µ—Å—Ç—å URL
                            if team.get("url"):
                                athlete_tasks.append(
                                    parse_athletes_for_team(session, team["url"], config["parser"])
                                )
                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ –µ–µ ID –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –∞—Ç–ª–µ—Ç–æ–≤
                                team['db_id'] = team_id
                                team['url_for_athletes'] = team.get("url")
                            else:
                                print(f"        ‚ÑπÔ∏è URL –∫–æ–º–∞–Ω–¥—ã '{team['name']}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∞—Ç–ª–µ—Ç–æ–≤.")
                    
                    all_athletes_lists = await asyncio.gather(*athlete_tasks)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ç–ª–µ—Ç–æ–≤
                    athlete_list_idx = 0
                    for team in teams_list: # –°–Ω–æ–≤–∞ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º, —á—Ç–æ–±—ã —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞—Ç–ª–µ—Ç–æ–≤
                        if 'db_id' in team and 'url_for_athletes' in team: # –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –¥–ª—è –∫–æ–≥–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –∞—Ç–ª–µ—Ç–æ–≤
                            athletes_for_current_team = all_athletes_lists[athlete_list_idx]
                            athlete_list_idx += 1

                            if athletes_for_current_team:
                                print(f"        –ù–∞–π–¥–µ–Ω–æ {len(athletes_for_current_team)} –∞—Ç–ª–µ—Ç–æ–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã '{team['name']}'.")
                                for athlete in athletes_for_current_team:
                                    insert_athlete(cursor, athlete["name"], athlete.get("url"), team['db_id'], athlete.get("external_id"), athlete.get("tag_url"))
                            else:
                                print(f"        ü§∑ –ê—Ç–ª–µ—Ç—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã '{team['name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.")
                else:
                    print(f"    ü§∑ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ '{tournament_url}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.")
            conn.commit()
            print(f"  ‚úÖ –ö–æ–º–∞–Ω–¥—ã –∏ –∞—Ç–ª–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
        else:
            print("  ü§∑ –ù–µ—Ç —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–º–∞–Ω–¥ –∏ –∞—Ç–ª–µ—Ç–æ–≤.")

    conn.close()
    print("\n--- –í—Å–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Championat.com —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. ---")

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∫—Ä–∏–ø—Ç ---
if __name__ == "__main__":
    db_file = "database/prosport.db"
    asyncio.run(load_championat_structure(db_file))
