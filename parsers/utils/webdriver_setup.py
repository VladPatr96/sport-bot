#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
webdriver_setup.py ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Chrome WebDriver

–ö–∞–∫ —Å–∫–∞—á–∞—Ç—å –Ω–æ–≤—ã–π ChromeDriver:
  –í–∞—Ä–∏–∞–Ω—Ç—ã:
    1) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ Selenium Manager (selenium>=4.13)
       ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏/–æ–±–Ω–æ–≤–∏ selenium: pip install --upgrade selenium
       ‚Ä¢ Service() –±–µ–∑ –ø—É—Ç–∏ —Å–∞–º –ø–æ–¥—Ç—è–Ω–µ—Ç –Ω—É–∂–Ω—ã–π –¥—Ä–∞–π–≤–µ—Ä –ø–æ–¥ Chrome 140.

    2) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ chromedriver-autoinstaller
       ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø–∞–∫–µ—Ç: pip install chromedriver-autoinstaller
       ‚Ä¢ –í—ã–∑–æ–≤ chromedriver_autoinstaller.install() —Å–∫–∞—á–∞–µ—Ç –∏ –ø–æ–ª–æ–∂–∏—Ç
         –ø–æ–¥—Ö–æ–¥—è—â–∏–π chromedriver (140.x) –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É.

    3) –í—Ä—É—á–Ω—É—é —Å —Å–∞–π—Ç–∞ Chrome for Testing
       ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏ –≤–µ—Ä—Å–∏—é Chrome: "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe" --version
       ‚Ä¢ –°–∫–∞—á–∞–π chromedriver —Ç–æ–π –∂–µ –≤–µ—Ä—Å–∏–∏: https://googlechromelabs.github.io/chrome-for-testing/
       ‚Ä¢ –†–∞—Å–ø–∞–∫—É–π chromedriver.exe –≤ –ø—Ä–æ–µ–∫—Ç –∏ —É–∫–∞–∂–∏ –ø—É—Ç—å –≤ Service(...).

–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–±—É–µ—Ç —Å–ø–µ—Ä–≤–∞ Selenium Manager, –∑–∞—Ç–µ–º chromedriver-autoinstaller.
"""

import os
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.common.exceptions import WebDriverException

try:
    import chromedriver_autoinstaller
except ImportError:
    chromedriver_autoinstaller = None


def _chrome_options(headless: bool) -> Options:
    opts = Options()
    if headless:
        opts.add_argument("--headless=new")
    opts.add_argument("--disable-gpu")
    opts.add_argument("--disable-software-rasterizer")
    opts.add_argument("--use-gl=swiftshader")
    opts.add_argument("--disable-features=VizDisplayCompositor")
    opts.add_argument("--no-sandbox")
    opts.add_argument("--disable-dev-shm-usage")
    opts.add_argument("--window-size=1920,1080")
    return opts


def build_driver(headless: bool = True) -> webdriver.Chrome:
    opts = _chrome_options(headless)

    # –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ Selenium Manager (selenium>=4.13)
    try:
        service = Service()
        driver = webdriver.Chrome(service=service, options=opts)
        driver.set_page_load_timeout(60)
        return driver
    except WebDriverException as e:
        print(f"‚ö†Ô∏è Selenium Manager –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
        if not chromedriver_autoinstaller:
            raise

    # –§–æ–ª–±—ç–∫: chromedriver-autoinstaller
    driver_path = chromedriver_autoinstaller.install()
    service = Service(driver_path)
    driver = webdriver.Chrome(service=service, options=opts)
    driver.set_page_load_timeout(60)
    return driver


def main():
    try:
        driver = build_driver(headless=True)
        print("‚úÖ WebDriver –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        driver.get("https://www.google.com")
        print("üåê –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞:", driver.title)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebDriver: {e}")
    finally:
        try:
            driver.quit()
        except Exception:
            pass


if __name__ == "__main__":
    main()
