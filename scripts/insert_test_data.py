import sqlite3

# üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
conn = sqlite3.connect('prosport.db')
conn.row_factory = sqlite3.Row
cursor = conn.cursor()

# üîπ –î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏
news_data = {
    "title": "–õ–µ–±—Ä–æ–Ω –î–∂–µ–π–º—Å —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥",
    "url": "https://example.com/lebron-record",
    "content": "–õ–µ–±—Ä–æ–Ω –î–∂–µ–π–º—Å —Å—Ç–∞–ª —Å–∞–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–º –∏–≥—Ä–æ–∫–æ–º –≤ –∏—Å—Ç–æ—Ä–∏–∏ NBA.",
    "source": "test_source",
    "published_at": "2025-07-16T12:00:00",
    "lang": "ru"
}

# üîπ –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –Ω–æ–≤–æ—Å—Ç—å
cursor.execute("SELECT id FROM news WHERE url = ?", (news_data["url"],))
existing = cursor.fetchone()

if existing:
    print(f"‚ùó –ù–æ–≤–æ—Å—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ (id = {existing['id']})")
    news_id = existing["id"]
else:
    cursor.execute('''
        INSERT INTO news (title, url, content, source, published_at, lang)
        VALUES (?, ?, ?, ?, ?, ?)
    ''', (
        news_data["title"],
        news_data["url"],
        news_data["content"],
        news_data["source"],
        news_data["published_at"],
        news_data["lang"]
    ))
    conn.commit()
    news_id = cursor.lastrowid
    print(f"‚úÖ –ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É (id = {news_id})")

# üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏ —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º
def insert_entity(name, type_, lang="ru"):
    cursor.execute(
        "SELECT id FROM entities WHERE name = ? AND type = ?", (name, type_)
    )
    existing = cursor.fetchone()
    if existing:
        print(f"! –°—É—â–Ω–æ—Å—Ç—å '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (id = {existing['id']})")
        return existing["id"]

    cursor.execute(
        "INSERT INTO entities (name, type, lang) VALUES (?, ?, ?)",
        (name, type_, lang)
    )
    conn.commit()
    entity_id = cursor.lastrowid
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—É—â–Ω–æ—Å—Ç—å: {name} (id = {entity_id})")

    add_alias(entity_id, name, lang)
    return entity_id

# üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ alias (–µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
def add_alias(entity_id, alias, lang="ru"):
    alias = alias.strip().lower()
    cursor.execute('''
        SELECT 1 FROM entity_aliases 
        WHERE entity_id = ? AND LOWER(alias) = ?
    ''', (entity_id, alias))
    
    if cursor.fetchone():
        print(f"üîó –ü—Å–µ–≤–¥–æ–Ω–∏–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {alias}")
        return
    
    cursor.execute('''
        INSERT INTO entity_aliases (entity_id, alias, lang)
        VALUES (?, ?, ?)
    ''', (entity_id, alias, lang))
    conn.commit()
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø—Å–µ–≤–¥–æ–Ω–∏–º '{alias}' –¥–ª—è entity_id = {entity_id}")

# üîπ –í—Å—Ç–∞–≤–ª—è–µ–º —Å—É—â–Ω–æ—Å—Ç–∏
sport_id = insert_entity("–ë–∞—Å–∫–µ—Ç–±–æ–ª", "sport")
tournament_id = insert_entity("NBA", "tournament")
team_id = insert_entity("–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å –õ–µ–π–∫–µ—Ä—Å", "team")
player_id = insert_entity("–õ–µ–±—Ä–æ–Ω –î–∂–µ–π–º—Å", "player")

# üîπ –°–≤—è–∑–∏ –º–µ–∂–¥—É —Å—É—â–Ω–æ—Å—Ç—è–º–∏
def link_entities(parent_id, child_id, relation="member_of"):
    cursor.execute(
        "SELECT id FROM entity_relations WHERE parent_id = ? AND child_id = ?",
        (parent_id, child_id)
    )
    existing = cursor.fetchone()
    if existing:
        print(f"üîó –°–≤—è–∑—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (id = {existing['id']})")
        return existing['id']

    cursor.execute('''
        INSERT INTO entity_relations (parent_id, child_id, relation)
        VALUES (?, ?, ?)
    ''', (parent_id, child_id, relation))
    conn.commit()
    relation_id = cursor.lastrowid
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å: {parent_id} ‚Üí {child_id} (id = {relation_id})")
    return relation_id

link_entities(sport_id, tournament_id)
link_entities(tournament_id, team_id)
link_entities(team_id, player_id)

# üîπ –ü—Ä–∏–≤—è–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –∫ —Å—É—â–Ω–æ—Å—Ç–∏
def link_news_to_entity(news_id, entity_id, confidence=1.0):
    cursor.execute(
        "SELECT id FROM news_entities WHERE news_id = ? AND entity_id = ?",
        (news_id, entity_id)
    )
    if cursor.fetchone():
        print(f"üì∞ –ù–æ–≤–æ—Å—Ç—å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —Å—É—â–Ω–æ—Å—Ç–∏ (id = {entity_id})")
        return

    cursor.execute('''
        INSERT INTO news_entities (news_id, entity_id, confidence)
        VALUES (?, ?, ?)
    ''', (news_id, entity_id, confidence))
    conn.commit()
    print(f"‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å (id = {news_id}) –∫ —Å—É—â–Ω–æ—Å—Ç–∏ (id = {entity_id})")

link_news_to_entity(news_id, player_id)

# üîç –ü–æ–∏—Å–∫ —Å—É—â–Ω–æ—Å—Ç–∏ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ alias
def find_entity_by_name(name):
    name = name.strip().lower()

    cursor.execute('''
        SELECT e.id, e.name, e.type
        FROM entities e
        LEFT JOIN entity_aliases a ON e.id = a.entity_id
        WHERE LOWER(e.name) LIKE ? OR LOWER(a.alias) LIKE ?
        LIMIT 1
    ''', (f"%{name}%", f"%{name}%"))

    row = cursor.fetchone()
    if row:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—É—â–Ω–æ—Å—Ç—å: {row['name']} (id = {row['id']})")
    else:
        print(f"‚ùå –°—É—â–Ω–æ—Å—Ç—å '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    return row

# üîé –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Å—É—â–Ω–æ—Å—Ç–∏ —Å —É—á—ë—Ç–æ–º –∏–µ—Ä–∞—Ä—Ö–∏–∏
def get_news_by_entity(entity_id):
    query = '''
    WITH RECURSIVE descendants(id) AS (
        SELECT id FROM entities WHERE id = ?
        UNION
        SELECT er.child_id
        FROM entity_relations er
        JOIN descendants d ON er.parent_id = d.id
    )
    SELECT DISTINCT n.*
    FROM news n
    JOIN news_entities ne ON ne.news_id = n.id
    WHERE ne.entity_id IN (SELECT id FROM descendants)
    ORDER BY n.published_at DESC
    '''
    cursor.execute(query, (entity_id,))
    results = cursor.fetchall()
    print(f"\nüîé –ù–∞–π–¥–µ–Ω–æ {len(results)} –Ω–æ–≤–æ—Å—Ç–µ–π:")
    for row in results:
        print(f"- [{row['published_at']}] {row['title']} (id={row['id']})")

def categorize_news(news_id):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏
    cursor.execute("SELECT title, content FROM news WHERE id = ?", (news_id,))
    news = cursor.fetchone()
    if not news:
        print(f"‚ùå –ù–æ–≤–æ—Å—Ç—å —Å id={news_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    text = (news["title"] or "") + " " + (news["content"] or "")
    text = text.lower()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ alias
    cursor.execute('''
        SELECT e.id AS entity_id, LOWER(COALESCE(a.alias, e.name)) AS alias
        FROM entities e
        LEFT JOIN entity_aliases a ON e.id = a.entity_id
    ''')
    aliases = cursor.fetchall()

    found_ids = set()
    for row in aliases:
        alias = row["alias"]
        if alias and alias in text:
            found_ids.add(row["entity_id"])

    for entity_id in found_ids:
        cursor.execute('''
            SELECT 1 FROM news_entities WHERE news_id = ? AND entity_id = ?
        ''', (news_id, entity_id))
        if not cursor.fetchone():
            cursor.execute('''
                INSERT INTO news_entities (news_id, entity_id, confidence)
                VALUES (?, ?, ?)
            ''', (news_id, entity_id, 0.9))
    
    conn.commit()
    print(f"‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–æ {len(found_ids)} —Å—É—â–Ω–æ—Å—Ç–µ–π –∫ –Ω–æ–≤–æ—Å—Ç–∏ id={news_id}")

def categorize_all_uncategorized_news():
    cursor.execute('''
        SELECT n.id
        FROM news n
        LEFT JOIN news_entities ne ON n.id = ne.news_id
        WHERE ne.news_id IS NULL
    ''')
    rows = cursor.fetchall()

    print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(rows)} –Ω–æ–≤–æ—Å—Ç–µ–π –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    for row in rows:
        categorize_news(row["id"])
        

print(f"‚úÖ –ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É (id = {news_id})")
categorize_news(news_id)  # <-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ —Å—É—â–Ω–æ—Å—Ç–µ–π


# üîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏ –Ω–æ–≤–æ—Å—Ç–µ–π
entity = find_entity_by_name("–õ–µ–±—Ä–æ–Ω –î–∂–µ–π–º—Å")
if entity:
    get_news_by_entity(entity["id"])

# ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
conn.close()

